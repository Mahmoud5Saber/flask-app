name: CI/CD Pipelineon:  push:    branches:      -master  # Runs the workflow when code is pushed to themaster branch  pull_request:    branches:      -master  # Runs the workflow on pull requests targetingmasterjobs:  test:    name: Run Pytest Unit Tests    runs-on: ubuntu-latest    steps:      - name: Checkout Repository        uses: actions/checkout@v4      - name: Set Up Python        uses: actions/setup-python@v4        with:          python-version: '3.10'      - name: Install Dependencies        run: |          python -m pip install --upgrade pip          pip install -r requirements.txt      - name: Run Tests        run: pytest test_app.py  build-and-push:    name: Build and Push Docker Image    runs-on: ubuntu-latest    needs: test  # Only runs if tests pass    steps:      - name: Checkout Repository        uses: actions/checkout@v4      - name: Set Up Docker Buildx        uses: docker/setup-buildx-action@v2      - name: Log in to Docker Hub        uses: docker/login-action@v3        with:          username: ${{ secrets.DOCKER_USERNAME }}          password: ${{ secrets.DOCKER_PASSWORD }}      - name: Build and Push Docker Image        uses: docker/build-push-action@v5        with:          context: .          push: true          tags: ${{ secrets.DOCKER_USERNAME }}/flask_app:latest  deploy:    name: Deploy to Test Server    runs-on: ubuntu-latest    needs: build-and-push  # Only runs if the Docker image is built successfully    steps:      - name: Deploy to Server        run: |          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'            docker pull ${{ secrets.DOCKER_USERNAME }}/flask_app:latest            docker stop flask_app || true            docker rm flask_app || true            docker run -d -p 5050:5050 --name flask_app ${{ secrets.DOCKER_USERNAME }}/flask_app:latest          EOF